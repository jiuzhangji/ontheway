在这个edit上作为buffer当面共享
http://collabedit.com/tm7rk


6.
棋盘染色 2
http://codevs.cn/problem/1050/

14.
And Then There Was One
约瑟夫问题变形
https://icpcarchive.ecs.baylor.edu/index.php?option=com_onlinejudge&Itemid=8&category=287&page=show_problem&problem=1883

15.
Game of Sum
http://blog.csdn.net/abc123456789cbaabc/article/details/8680184

16.
Even Parity
http://blog.sina.com.cn/s/blog_a0e9b50d0101bkpe.html

17.
Hacker’s Crackdown
http://www.350351.com/bianchengyuyan/Java/101027.html

18.
string painter
http://www.cnblogs.com/hyxsolitude/p/3850819.html

19.
二维的most trap water？

20.
拯救水滴
http://codevs.cn/problem/2889/

21.
买帽子
http://codevs.cn/problem/2980/

22.
魔法禁书目录2：回家
http://codevs.cn/problem/3024/

23.
线段覆盖 2
http://codevs.cn/problem/3027/

24.
树的计数
http://codevs.cn/problem/3043/

25.
装箱问题3
http://codevs.cn/problem/3152/

26.
抄书问题
http://codevs.cn/problem/3162/

27.
整数划分
http://codevs.cn/problem/3179/

28.
黄金宝藏
http://codevs.cn/problem/3196/

29.
改变次数
http://codevs.cn/problem/3266/

30.
最小m 段和问题
http://codevs.cn/problem/3278/

31.
Square words
http://codevs.cn/problem/3301/

32.
选择数字
http://codevs.cn/problem/3327/

33.
过山车
http://codevs.cn/problem/3325/

34.
膜拜
http://codevs.cn/problem/3369/

35.
书架
http://codevs.cn/problem/3413/

36.
选学霸
http://codevs.cn/problem/3372/

37.
混合背包
http://codevs.cn/problem/3269/

38.
加分二叉树
http://codevs.cn/problem/1090/

39.
有若干个盒子，每个盒子有length和width，不考虑高度。只要尺寸fit，大盒子就可以
放小盒子，但是一层只能套一个，即便还有空余；但可以多层嵌套。求最小的面积放所
有的盒子

40.
Given an integer array, adjust each integers so that the difference of every adjcent integers are not greater than a given number target.

If the array before adjustment is A, the array after adjustment is B, you should minimize the sum of |A[i]-B[i]| 

注意
You can assume each number in the array is a positive integer and not greater than 100

样例
Given [1,4,2,3] and target=1, one of the solutions is [2,3,2,3], the adjustment cost is 2 and it's minimal. Return 2.


41.
如何设计一个fb的privacy framework/system


42.
Given randomM(), a uniform random number generator in [1, M], implements another uniform random generator randomN(), in [1, n].


